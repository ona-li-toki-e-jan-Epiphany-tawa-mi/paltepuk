# This file is part of paltepuk.
#
# Copyright (c) 2024-2025 ona-li-toki-e-jan-Epiphany-tawa-mi
#
# paltepuk is free software: you can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# paltepuk is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with paltepuk. If not, see <https://www.gnu.org/licenses/>.

# Deal with the devil to get clearnet tunneling.

# Installation instructions:
# - In the Cloudflare dashboard, go to 'Zero Trust > Networks > Tunnels', click
#   '+ Create a tunnel', and then click 'Select Cloudflared'.
# - Enter in a random name for the tunnel since you'll delete it after.
# - Cloudflare will give a token. SSH into the machine, run 'cloudflared tunnel
#   login <token>', and follow the instructions.
# - Go back to Tunnels and delete the dummy tunnel.
# - Run 'cloudflared tunnel create <tunnel name>' to create the tunnel. This
#   will generate a JSON file; change it's ownership to the cloudflared user
#   and move it into the cloudflared directory.
# - The name of the JSON file is the tunnel's UUID. Enter it into the
#   config.nix.
# - Remove the cert.pem file (in ~/.cloudflared) that was generated by the first
#   cloudflared command to be safe.
# - Rebuild.

{ lib, pkgs, cloudflaredTunnelUUID, ... }:

let
  inherit (lib) escapeShellArg mkIf;

  cloudflaredDirectory = "/var/lib/cloudflared";
in {
  system.activationScripts."create-cloudflared-directory" = ''
    mkdir -m 700 -p ${escapeShellArg cloudflaredDirectory}
    chown cloudflared:cloudflared ${escapeShellArg cloudflaredDirectory}
  '';

  users = {
    users = {
      "epiphany".packages = [ pkgs.cloudflared ];

      "cloudflared" = {
        isSystemUser = true;
        description = "cloudflared user";
        group = "cloudflared";
      };
    };

    groups."cloudflared" = { };
  };

  services.cloudflared = mkIf ("" != cloudflaredTunnelUUID) {
    enable = true;

    tunnels."${cloudflaredTunnelUUID}" = {
      credentialsFile = "${cloudflaredDirectory}/${cloudflaredTunnelUUID}.json";
      default = "http_status:404";

      ingress = {
        "paltepuk.xyz" = "http://127.0.0.1:80";
        "www.paltepuk.xyz" = "http://127.0.0.1:80";
      };
    };
  };
}
